{
  "openapi": "3.0.3",
  "info": {
    "title": "Recipe Sharing API",
    "description": "Final Project Created For diBimbing",
    "version": "1.0.0",
    "contact": {
      "name": "Raihan Romzi R",
      "email": "raihanromzi.dev@gmail.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8080"
    }
  ],
  "paths": {
    "/api/merchant": {
      "post": {
        "tags": [
          "Merchant"
        ],
        "summary": "Create an Account",
        "description": "A merchant could register itself/create an account in the merchant service.",
        "requestBody": {
          "$ref": "#/components/requestBodies/CreateMerchant"
        },
        "responses": {
          "201": {
            "description": "Success Created Merchant Account",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/201CreatedMerchant"
                },
                "example": {
                  "Status": "201 Created",
                  "Data": {
                    "id": "jh34h23g3",
                    "password": "123456",
                    "name": "JSmartphone",
                    "address": "Jakarta",
                    "phone_number": 12345678
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client Request Not Correct",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "example": {
                  "Status": "400 Bad Request",
                  "Message": "Request Body Not Correct"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "example": {
                  "Status": "500 Server Error",
                  "Message": "Server Error Please Wait"
                }
              }
            }
          }
        }
      }
    },
    "/api/merchant/{merchantId}": {
      "delete": {
        "tags": [
          "Merchant"
        ],
        "summary": "Delete Merchant Account",
        "description": "A merchant could remove its data/delete its account in the merchant service.",
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "required": true,
            "description": "Add Merchant ID for Delete Specific Merchant Account",
            "schema": {
              "type": "integer"
            },
            "example": 123
          }
        ],
        "responses": {
          "200": {
            "description": "Success Delete Merchant",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSuccess"
                },
                "example": {
                  "Status": "200 OK",
                  "Message": "Success Delete Merchant"
                }
              }
            }
          },
          "404": {
            "description": "Merchant ID Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "example": {
                  "Status": "404 Not Found",
                  "Message": "Merchant ID Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "example": {
                  "Status": "500 Server Error",
                  "Message": "Server Error Please Wait"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get a List of Product",
        "description": "A merchant could get the list of its products from the merchant service.",
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "required": true,
            "description": "Add Merchant ID for get the list of products",
            "schema": {
              "type": "integer"
            },
            "example": 123
          }
        ],
        "responses": {
          "200": {
            "description": "Get List of Product in Merchant",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAll"
                },
                "example": {
                  "Status": "200 OK",
                  "Message": "Success Get Product",
                  "Data": [
                    {
                      "id": 1234,
                      "name": "Laptop",
                      "quantity": 12,
                      "price": 100000
                    },
                    {
                      "id": 4321,
                      "name": "Smartphone",
                      "quantity": 10,
                      "price": 200000
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Merchant ID Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "example": {
                  "Status": "404 Not Found",
                  "Message": "Merchant ID Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "example": {
                  "Status": "500 Server Error",
                  "Message": "Server Error Please Wait"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Add Product in Merchant",
        "description": "A merchant could add products in the merchant service.",
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "required": true,
            "description": "Merchant ID for add new product",
            "schema": {
              "type": "integer"
            },
            "example": 123
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ProductMerchant"
        },
        "responses": {
          "201": {
            "description": "Success Created Product",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/201CreatedProduct"
                },
                "example": {
                  "Status": "201 Created",
                  "Data": {
                    "name": "Smartphone",
                    "quantity": 12,
                    "price": 12345678
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client Request Not Correct",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "example": {
                  "Status": "400 Bad Request",
                  "Message": "Request Body Not Correct"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "example": {
                  "Status": "500 Server Error",
                  "Message": "Server Error Please Wait"
                }
              }
            }
          }
        }
      }
    },
    "/api/merchant/{merchantId}/{productId}": {
      "put": {
        "tags": [
          "Product"
        ],
        "summary": "Update Specific Product",
        "description": "A merchant could update a product in the merchant service.",
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "required": true,
            "description": "Add Merchant ID for Updated",
            "schema": {
              "type": "integer"
            },
            "example": 123
          },
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "description": "Add Product ID for Updated",
            "schema": {
              "type": "integer"
            },
            "example": 123
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/UpdateProductMerchant"
        },
        "responses": {
          "200": {
            "description": "Success Delete Merchant",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAll"
                },
                "example": {
                  "Status": "200 OK",
                  "Message": "Success Get Product",
                  "Data": [
                    {
                      "id": 1234,
                      "name": "Laptop",
                      "quantity": 12,
                      "price": 100000
                    },
                    {
                      "id": 4321,
                      "name": "Smartphone",
                      "quantity": 10,
                      "price": 200000
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Client Request Not Correct",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "example": {
                  "Status": "400 Bad Request",
                  "Message": "Request Body Not Correct"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "example": {
                  "Status": "500 Server Error",
                  "Message": "Server Error Please Wait"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "summary": "Delete Specific Product",
        "description": "A merchant could delete a product in the merchant service.",
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "required": true,
            "description": "Add Merchant ID for Deleted",
            "schema": {
              "type": "integer"
            },
            "example": 123
          },
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "description": "Add Product ID for Deleted",
            "schema": {
              "type": "integer"
            },
            "example": 123
          }
        ],
        "responses": {
          "200": {
            "description": "Get List of Product After Delete in Merchant",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAll"
                },
                "example": {
                  "Status": "200 OK",
                  "Message": "Success Get Product",
                  "Data": [
                    {
                      "id": 1234,
                      "name": "Laptop",
                      "quantity": 12,
                      "price": 100000
                    },
                    {
                      "id": 4321,
                      "name": "Smartphone",
                      "quantity": 10,
                      "price": 200000
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Merchant ID / Product ID Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "example": {
                  "Status": "404 Not Found",
                  "Message": "Merchant ID / Product ID Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "example": {
                  "Status": "500 Server Error",
                  "Message": "Server Error Please Wait"
                }
              }
            }
          }
        }
      }
    }
  },
  "externalDocs": {
    "url": "https://github.com/raihanromzi/recipe-sharing-api",
    "description": "Github Repository"
  },
  "components": {
    "requestBodies": {
      "CreateMerchant": {
        "required": false,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "type": "string",
                  "required": true,
                  "minLength": 6
                },
                "name": {
                  "type": "string",
                  "required": true,
                  "minLength": 3,
                  "maxLength": 50
                },
                "address": {
                  "type": "string",
                  "required": true
                },
                "phone_number": {
                  "type": "integer",
                  "required": true
                }
              }
            },
            "example": {
              "password": "123456",
              "name": "John",
              "address": "Jakarta",
              "phone_number": 123456789
            }
          }
        }
      },
      "ProductMerchant": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "required": true,
                  "minLength": 3,
                  "maxLength": 50
                },
                "quantity": {
                  "type": "integer",
                  "required": true,
                  "minimum": 1
                },
                "price": {
                  "type": "number",
                  "required": true,
                  "minimum": 10000
                }
              }
            },
            "example": {
              "name": "Smartphone",
              "quantity": 10,
              "price": 30000
            }
          }
        }
      },
      "UpdateProductMerchant": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "required": false,
                  "minLength": 3,
                  "maxLength": 50
                },
                "quantity": {
                  "type": "integer",
                  "required": false,
                  "minimum": 1
                },
                "price": {
                  "type": "number",
                  "required": false,
                  "minimum": 10000
                }
              }
            },
            "example": {
              "name": "Smartphone",
              "quantity": 10,
              "price": 30000
            }
          }
        }
      }
    },
    "schemas": {
      "201CreatedMerchant": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "string"
          },
          "Data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "phone_number": {
                "type": "integer"
              }
            }
          }
        }
      },
      "201CreatedProduct": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "string"
          },
          "Data": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "quantity": {
                "type": "integer"
              },
              "price": {
                "type": "integer"
              }
            }
          }
        }
      },
      "GetAll": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "string"
          },
          "Message": {
            "type": "string"
          },
          "Data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "quantity": {
                  "type": "integer"
                },
                "price": {
                  "type": "number"
                }
              }
            }
          }
        }
      },
      "ResponseError": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "string"
          },
          "Message": {
            "type": "string"
          }
        }
      },
      "ResponseSuccess": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "string"
          },
          "Message": {
            "type": "string"
          }
        }
      }
    }
  }
}
